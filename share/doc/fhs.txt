------------------------------------------------------------------------------
FHS: Filesystem Hierarchy Standard
	<https://refspecs.linuxfoundation.org/fhs.shtml>
	<https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/4/html/reference_guide/s1-filesystem-fhs>
------------------------------------------------------------------------------

/bin
	Essential command binaries.
	For use by all users.
	Available when no other filesystems are mounted.
	Must have no subdirectories.

/etc
	Host-specific system configuration files.
	Must not contain executable binaries.
	Files must be static (will not change w/out admin intervention).

	/etc/opt
		Configuration files for /opt (in /etc/opt/$PACKAGE subdirs).

	/etc/skel
		"Skeleton" files used to populate a newly-created user directory.

/home
	User home directories.

/lib
	Essential shared libraries and kernel modules.
	Only those needed to boot the system and run /bin and /sbin.

/opt
	Add-on application software packages.

	/opt/$PACKAGE
		Static files for $PACKAGE.

		/opt/$PACKAGE/bin
			Programs to be invoked by users.

		/opt/$PACKAGE/share/man
			Manual pages.

	/opt/bin
	/opt/doc
	/opt/include
	/opt/info
	/opt/lib
	/opt/man
		Reserved for local sysadmin use.

/run
	Information describing the system since it was booted.
	PID files.
	Must be cleared on reboot.
	Previously /var/run.

/sbin
	Root-only utilities for system administration, etc.
	Only binaries essential to boot/restore/recover/repair the system.
	Available when no other filesystems are mounted.

/tmp
	Temporary files.
	May be deleted at any time.

/usr
	Secondary hierarchy of static, shareable data.

	/usr/bin
		Primary directory of executable commands on the system.

	/usr/etc
		System-wide configuration files.

	/usr/games
		Games and educational binaries.

	/usr/include
		General-use C header files.

	/usr/lib
		Object files and libraries.
		May have /usr/lib/$APPLICATION subdirectories.

	/usr/libexec
		Binaries not intended to be directly executed by users or scripts.
		Optional. Use /usr/lib *OR* /usr/libexec for these, not both.

	/usr/local
		Local hierarchy of shareable programs and data.
		Must not be overwritten when system software is updated.

		/usr/local/bin
		/usr/local/etc
		/usr/local/games
		/usr/local/include
		/usr/local/lib
		/usr/local/libexec
		/usr/local/man
		/usr/local/sbin
		/usr/local/share
		/usr/local/src
			As defined under / and /usr.

	/usr/sbin
		Non-essential sysadmin binaries.

	/usr/share
		Architecture-independent (not OS-independent) data.
		Read-only.

		/usr/share/color
			Colour management information.
			Must only contain subdirectories, not files.

		/usr/share/dict
			Word lists.

		/usr/share/doc
			Miscellaneous documentation.

		/usr/share/games
			Static data files for /usr/games.
			E.g. help text, level descriptions.

		/usr/share/info
			GNU info files.

		/usr/share/locale
			Locale information.

		/usr/share/man
			Manual pages.

		/usr/share/misc
			Miscellaneous files that don't require a subdirectory.
			For programs that need only a single file in /usr/share.

		/usr/share/terminfo
			Terminfo database.

		/usr/share/zoneinfo
			Timezone info and configuration.

		/usr/share/$PROGRAM
			Multiple static files for $PROGRAM.

	/usr/src
		Source code.
		For reference purposes only (source should not be built here).

/var
	Variable data.

	/var/cache
		Application cache data.
		The application must be able to regenerate or restore the cache.
		Must remain valid between invocations of the app and reboots.
		May expire or be purged.

		/var/cache/$PACKAGE
			Cache data for $PACKAGE.

		/var/cache/fonts
			Dynamically-created fonts in appropriately-named subdirectories.

		/var/cache/man
			Locally-formatted manual pages.

		/var/cache/www
			WWW proxy or cache data.

	/var/games
		Variable data for games in /usr/games.
		E.g. non-static score files, game play logs.

	/var/lib
		Host-specific data programs modify while they run.
		State information: preserves the condition of an application.
		Should generally remain valid after a reboot.
		Should not be logging or spooling data.

		/var/lib/$APPLICATION
			State info for $APPLICATION.

		/var/lib/$EDITOR
			Backup files and state.
			Saved files generated by unexpected termination of an editor.

		/var/lib/misc
			Miscellaneous files that don't require a subdirectory.

	/var/local
		Variable data for /usr/local.

	/var/lock
		Lock files for devices and resources shared by multiple applications.
		Naming convention: LCK..$DEV_BASENAME (e.g. /dev/ttys0 -> LCK..ttyS0).
		Locks should be world-readable.

	/var/log
		Log files and directories.

	/var/mail
		User mailbox files (as /var/mail/$USERNAME).

	/var/opt
		Variable data for /opt (in /var/opt/$PACKAGE subdirs).

	/var/run
		Information describing the system since it was booted.
		PID files.
		Must be cleared on reboot.
		OK for backwards compatibility, but FHS 3.0 specifies /run instead.

	/var/spool
		Information waiting to be processed. Often deleted after processing.
		Represents work to be done in the future.

	/var/tmp
		Temporary info.
		Preserved between reboots (more persistent than /tmp).

* * *

"Static" files do not change without system administrator intervention.

"Variable" files are not static.

"Shareable" files can be stored on one host and used on others (e.g. the files
in user home directories).

"Unshareable" files are not shareable, e.g. device lock files.

				 | shareable       | unshareable
-----------------+-----------------+-----------------
static           | /usr            | /etc
				 | /opt            | /boot
-----------------|-----------------+-----------------
variable         | /var/mail       | /var/run
				 | /var/spool/news | /var/lock
