shell_patterns=0

# -----------------------------------------------------------------------------
# Midnight Commander menu
# -----------------------------------------------------------------------------

= ! t t
@   Run command on selected file…
    cmd=%{Command}
    $cmd %f

+= t t
@   Run command on tagged files…
    set %t
    cmd=%{Command}
    for file; do
        $cmd "$file"
    done

c   Copy path
    printf "%d/%f" | pbcopy

+ x /usr/bin/cygpath
C   Copy Windows path
    cygpath -aw "%f" | tr -d '\n' | pbcopy

+ t l
h   Copy symlink target path
    readlink -e "%f" | pbcopy

+ ! t t & x /usr/bin/cygcheck
r   Reveal in Explorer
    $(cygpath --windir)/explorer /select, $(cygpath -w %f)

+ ! t t & x /usr/bin/mdutil
r   Reveal in Finder
    open -R %f

# -----------------------------------------------------------------------------
# directory actions
# -----------------------------------------------------------------------------

+ t t
N   New directory with tagged files…
    set %t
    newdir=%{Directory name}
    mkdir -p -- "$newdir" && mv -- "$@" "$newdir"

+ t r & ! t t
D   Delete if copy exists in other directory
    if [[ %d == %D ]]; then
        echo 'Error: the two directories must be different'
        error=true
    elif [[ -f %D/%f ]]; then
        if cmp -s "%f" "%D/%f" &>/dev/null; then
            rm -f "%f"
            exit 0
        else
            echo '%f and %D/%f differ -- nothing deleted'
            error=true
        fi
    else
        echo 'no copy of %f in %D -- nothing deleted'
        error=true
    fi
    if [[ $error == true ]]; then
        read -n1 -s -p 'Press any key to continue...' key
        printf '\n'
        exit 1
    fi

S   Move to other directory & replace w/ symlink
    if [[ %d == %D ]]; then
        echo 'Error: the two directories must be different'
        error=true
    elif [[ -e %D/%f ]]; then
        echo "Error: %D/%f already exists"
        error=true
    else
        if mv "%d/%f" "%D/%f" && ln -s "%D/%f" "%d/%f"; then
            exit 0
        else
            echo 'Error: operation failed'
            error=true
        fi
    fi
    if [[ $error == true ]]; then
        read -n1 -s -p 'Press any key to continue...' key
        printf '\n'
        exit 1
    fi

# -----------------------------------------------------------------------------
# archive commands
# -----------------------------------------------------------------------------

+ t t
g   Archive tagged files (tar+gzip)…
    set %t
    file=%{Archive name}
    tar czf "${file%.tar.gz}.tar.gz" "$@"

+ t t
z   Archive tagged files (zip)…
    set %t
    file=%{Archive name}
    zip -9r "${file%.zip}.zip" "$@"

+ t d
G   Archive current subdirectory (tar+gzip)
    dir=`basename %d /`
    tar czf "../$dir.tar.gz" "%d/"

+ t d
Z   Archive current subdirectory (zip)
    dir=`basename %d /`
    cd ..
    zip -9r "$dir.zip" "$dir/"

=+ f \.tar\.bz2$ | f \.tar\.gz$ | f \.tar\.xz$ | f \.7z$ | f \.bz2$ | f \.gz$ | f \.jar$ | f \.pkg$ | f \.rar$ | f \.tar$ | f \.tbz2$ | f \.tgz$ | f \.xz$ | f \.Z$ | f \.zip
x   Extract archive
    archive="%f"
    case $archive in
        *.tar.bz2)  tar xjf "$archive" ;;
        *.tar.gz)   tar xzf "$archive" ;;
        *.tar.xz)   unxz -ck "$archive" | tar xf - ;;
        *.7z)       7z x "$archive"    ;;
        *.bz2)      bunzip2 "$archive" ;;
        *.gz)       gunzip "$archive"  ;;
        *.jar)      jar xf "$archive"  ;;
        *.pkg)      pkgutil --expand "$archive" "${archive%.pkg}" ;;
        *.rar)      unrar x "$archive" ;;
        *.tar)      tar xf "$archive"  ;;
        *.tbz2)     tar xjf "$archive" ;;
        *.tgz)      tar xzf "$archive" ;;
        *.xz)       unxz -k "$archive" ;;
        *.Z)        uncompress "$archive" ;;
        *.zip)      unzip "$archive"   ;;
    esac

=+ f \.tar\.bz2$ | f \.tar\.gz$ | f \.tar\.xz$ | f \.7z$ | f \.bz2$ | f \.gz$ | f \.jar$ | f \.rar$ | f \.tar$ | f \.tbz2$ | f \.tgz$ | f \.xz$ | f \.Z$ | f \.zip
X   Extract archive to subdirectory
    archive=%f
    newdir="${archive%%.*}"
    if mkdir "$newdir" && cd "$newdir"; then
        case $archive in
            *.tar.bz2)
                tar xjf "../$archive"
                ;;
            *.tar.gz)
                tar xzf "../$archive"
                ;;
            *.tar.xz)
                unxz -ck "../$archive" | tar xf -
                ;;
            *.7z)
                7z x "../$archive"
                ;;
            *.bz2)
                bunzip2 "../$archive"
                ;;
            *.gz)
                gunzip "../$archive"
                ;;
            *.jar)
                jar xf "../$archive"
                ;;
            *.rar)
                unrar x "../$archive"
                ;;
            *.tar)
                tar xf "../$archive"
                ;;
            *.tbz2)
                tar xjf "../$archive"
                ;;
            *.tgz)
                tar xzf "../$archive"
                ;;
            *.xz)
                unxz -k "../$archive"
                ;;
            *.Z)
                uncompress "../$archive"
                ;;
            *.zip)
                unzip "../$archive"
                ;;
        esac
        %cd "$newdir"
    fi

# -----------------------------------------------------------------------------
# miscellaneous
# -----------------------------------------------------------------------------

/   Open man page…
    page=%{Man page}
    if type -P mandb 1>/dev/null; then
        command man "$page"
    else
        command man -c "$page"
    fi

# -----------------------------------------------------------------------------
# TODO
# -----------------------------------------------------------------------------

# scratch (mkcd scratch dir)

# extractm4a
# fixchmod
# makemp3
# msunpro
# tinypng
