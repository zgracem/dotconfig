# vim:ft=ruby
# If this file fails to load, debug by executing as a normal Ruby file:
#   ruby ~/.config/ruby/irbrc

require "irb"
require "irb/completion"

require "English"
require "date"
require "time"

require "symbolized"

autoload :CSV, "csv"
autoload :JSON, "json"
autoload :Pathname, "pathname"
autoload :Set, "set"
autoload :URI, "uri"
autoload :YAML, "yaml"

lib = Pathname.new("#{Dir.home}/Dropbox/lib/ruby").realpath.to_s
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require "zgm_colour"

# -----------------------------------------------------------------------------
# settings
# -----------------------------------------------------------------------------

# General IRB settings

IRB.conf[:AUTO_INDENT]  = true

IRB.conf[:USE_READLINE] = false
IRB.conf[:USE_MULTILINE] = true

IRB.conf[:HISTORY_FILE] = File.join(ENV.fetch("XDG_STATE_HOME"), "irb", "irb_history")
IRB.conf[:EVAL_HISTORY] = 2**10
IRB.conf[:SAVE_HISTORY] = 2**15

IRB.conf[:BACK_TRACE_LIMIT] = 5

# -----------------------------------------------------------------------------
# prompt
# -----------------------------------------------------------------------------

sigil = "#{Colour.blue}>#{Colour.reset}"
main_prompt = "#{Colour.dim.italic}%m#{Colour.noitalic}:%03n:%i#{Colour.reset}"

IRB.conf[:PROMPT] ||= {}

IRB.conf[:PROMPT][:ZGM] = {
  # normal prompt
  PROMPT_I: "#{main_prompt} #{sigil} ",

  # prompt for continuing strings
  PROMPT_S: "#{main_prompt} #{Colour.blue}%l#{Colour.reset} ",

  # prompt for continuing statement
  PROMPT_C: "#{main_prompt} #{sigil} ",

  # prefix to statement output
  RETURN:   "#{Colour.brightwhite}=>#{Colour.reset} %s\n"
}

IRB.conf[:PROMPT_MODE] = :ZGM

# ----------------------------------------------------------------------------
# autocomplete dropdown
# ----------------------------------------------------------------------------

require "reline"

if defined?(Reline::Face)
  Reline::Face.config(:completion_dialog) do |conf|
    conf.define :default,   foreground: :white, background: :black
    conf.define :enhanced,  foreground: :black, background: :white, style: :bold
    conf.define :scrollbar, foreground: :bright_black, background: :black
  end
end

# -----------------------------------------------------------------------------
# helper methods
# -----------------------------------------------------------------------------

# Excludes methods common to all Ruby {Object}s üêµ
# @return [Array<Symbol>]
class Object
  def my_methods
    (methods - common_methods).sort
  end

  private

  # @return [Array<Symbol>]
  def common_methods
    (Object.methods + Object.instance_methods)
  end
end

# Create misc. objects for testing
module Sample
  module_function

  # @return [String]
  def string
    "H√´llo, w√≥rld!\n"
  end
  alias_method :str, :string

  # @return [Integer]
  alias_method :original_hash, :hash

  # @return [Hash]
  def hash
    {
      red:    "ruby",
      green:  "emerald",
      blue:   "sapphire",
      violet: "amethyst",
      white:  %w[diamond glass]
    }
  end
  alias_method :hsh, :hash

  # @return [Array<String>]
  def array
    hash.values.flatten
  end
  alias_method :ary, :array

  # @return [Integer]
  def integer
    rand(10..1000)
  end
  alias_method :int, :integer

  # @return [Float]
  def float
    rand(10.0..100.0)
  end

  # @return [Pathname]
  def pathname
    Pathname("~/Documents/blankpage.pdf").expand_path
  end
  alias_method :path, :pathname

  # @return [Regexp]
  def regex
    /\A\h+\z/i
  end
  alias_method :regexp, :regex

  # @return [Set]
  def set
    Set.new(arr.map(&:to_sym))
  end

  # @return [URI]
  def uri
    URI("https://user:p4s$w0rd@example.org:8000/path/to/resource.cgi?param=value#anchor")
  end
  alias_method :url, :uri
end

# ----------------------------------------------------------------------------
# Fancy greeting
# ----------------------------------------------------------------------------

# Get just the version number
irb_v, ruby_v = [IRB.version, RUBY_DESCRIPTION].map { |s| s.split(/[ (]/)[1] }

# Format string for #printf call
welcome_string = "Welcome to %<i>sIRB %<i_v>s#{irb_v}%<x>s. " \
                 "You are using %<r>sruby %<r_v>s#{ruby_v}%<x>s.\n"

# Arguments for #printf call
fancy_colours = {
  i:   Colour.green.to_s,
  i_v: Colour.brightgreen.to_s,
  r:   Colour.magenta.to_s,
  r_v: Colour.brightmagenta.to_s,
  x:   Colour.reset.to_s
}

printf(welcome_string, fancy_colours)
