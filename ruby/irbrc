# If this file fails to load, debug by executing as a normal Ruby file:
#   ruby ~/.config/ruby/irbrc

require "irb"
require "irb/completion"

require "English"
require "pathname"
require "pp"

require "zgm/colour"
require "zgm/object/blank"
require "zgm/proxy"
require "zgm/red_warnings"
# require "zgm/term"

include IRB

irbrc_dir = Pathname.new(`readlink -e #{__FILE__}`.chomp).dirname.to_path

# -----------------------------------------------------------------------------
# http://irb.tools/
# -----------------------------------------------------------------------------

irb_v, ruby_v = [IRB.version, RUBY_DESCRIPTION].map { |s| s.split(/[ (]/)[1] }
welcome_msg   = "Welcome to %<i>sIRB %<i_v>s#{irb_v}%<x>s. " <<
                "You are using %<r>sruby %<r_v>s#{ruby_v}%<x>s."

colours = {
  i:   Colour.cyan.to_s,
  i_v: Colour.brightcyan.to_s,
  r:   Colour.magenta.to_s,
  r_v: Colour.brightmagenta.to_s,
  x:   Colour.reset.to_s
}

# `configure.rb` loads `implementation.rb`, which sets up the Irbtools module 
# with default settings.
require "irbtools/configure"

# Override default welcome message
Irbtools.welcome_message = sprintf(welcome_msg, colours)

# Override default FancyIrb colours
Irbtools.replace_library_callback :fancy_irb do
  FancyIrb.start({
    rocket_mode: true,       # activate or deactivate #=> rocket
    rocket_prompt: '#=> ',   # prompt to use for the rocket
    result_prompt: '=> ',    # prompt to use for normal output
    east_asian_width: false, # set to true if you have double-width characters (slower)
    colorize: {              # colors hash. Set to nil to deactivate colors
      rocket_prompt: [:blue],
      result_prompt: [:blue],
      input_prompt:  nil,
      irb_errors:    nil,
      stderr:        [:red, :bright],
      stdout:        nil,
      input:         nil,
     }
  })
end

# Custom Wirb colour scheme
Irbtools.replace_library_callback "wirb/wp" do
  Wirb.start
  Wirb.load_schema "#{irbrc_dir}/zgm.wirb.yaml"
end

# Now we load the rest of it
require "irbtools"

# -----------------------------------------------------------------------------
# settings
# -----------------------------------------------------------------------------

# General IRB settings

IRB.conf[:AUTO_INDENT]  = true

IRB.conf[:USE_READLINE] = true

IRB.conf[:HISTORY_FILE] = File::expand_path("~/.local/history/irb_history")
IRB.conf[:EVAL_HISTORY] = 2 ** 10
IRB.conf[:SAVE_HISTORY] = 2 ** 15

# -----------------------------------------------------------------------------
# prompt
# -----------------------------------------------------------------------------

off = Colour.reset.to_s
dim = Colour.brightblack.to_s

IRB.conf[:PROMPT][:ZGM] = {
  # normal prompt
  PROMPT_I: "#{Colour.blue}>> " << off,

  # prompt when indenting code
  PROMPT_N: "#{dim}│  " << off,

  # prompt for continuing strings
  PROMPT_S: "#{dim}│%l " << off,

  # prompt for continuing statement
  PROMPT_C: "#{dim}├ " << off,

  # prefix to statement output
  RETURN:   "#{Colour.brightwhite}=>#{off} %s\n"
}

IRB.conf[:PROMPT_MODE] = :ZGM

# -----------------------------------------------------------------------------
# helper methods
# -----------------------------------------------------------------------------

### Doesn't work w/ irbtools :(
# def echo
#   IRB.conf[:echo] = !IRB.conf[:echo]
# end

# Usage: w = ww
def ww(c = :yeg)
  require "weather_ca" unless defined?(WeatherCA)
  WeatherCA::Location.new(c).weather
end

def str
  "hello world"
end

def hsh
  {red: "ruby", green: "emerald", blue: "sapphire"}
end

def ary
  [0, 1, (1+0i), 2/3r, (5..8), 1.321e+34, Float::INFINITY]
end

def int
  rand(10..1000)
end
