[
  // Snippets
  {
    "key": "ctrl+l",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
    "args": {
      "langId": "markdown",
      "name": "inline_link"
    }
  },
  // Change text to upper/lower/title case (Ã  la Sublime Text)
  {
    "key": "ctrl+k ctrl+l",
    "command": "editor.action.transformToLowercase",
    "when": "isWindows && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "editor.action.transformToUppercase",
    "when": "isWindows && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k shift+t",
    "command": "editor.action.transformToTitlecase",
    "when": "isWindows && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "editor.action.transformToLowercase",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "editor.action.transformToUppercase",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k shift+t",
    "command": "editor.action.transformToTitlecase",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  // Windows-ish shortcuts on Mac
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "isWindows && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+j",
    "command": "editor.action.joinLines",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+l",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.deleteLines",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  // Ctrl/Cmd+Shift+D to duplicate lines
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "isWindows && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+shift+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "isMac && editorTextFocus && !editorReadonly"
  },
  // F9 = Sort Lines Ascending
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f9",
    "command": "editor.action.sortLinesAscending",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+f9",
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+f9",
    "command": "editor.action.sortLinesDescending",
    "when": "editorTextFocus && !editorReadonly"
  },
  // v4run.transpose
  {
    "key": "ctrl+t",
    "command": "extension.transpose",
    "when": "editorTextFocus && !editorReadonly"
  },
  // bierner.emojisense
  {
    "key": "ctrl+i",
    "command": "-emojisense.quickEmoji"
  },
  {
    "key": "ctrl+i",
    "command": "-emojisense.quickEmojiTerminal"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-emojisense.quickEmojitextTerminal"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-emojisense.quickEmojitext"
  },
  {
    "key": "shift+cmd+i",
    "command": "-emojisense.quickEmojitext"
  },
  {
    "key": "shift+cmd+i",
    "command": "-emojisense.quickEmojitextTerminal"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmoji"
  },
  {
    "key": "cmd+i",
    "command": "-emojisense.quickEmojiTerminal"
  },
  // yzhang.markdown-all-in-one
  {
    "key": "backspace",
    "command": "-markdown.extension.onBackspaceKey"
  },
  {
    "key": "backspace",
    "command": "markdown.extension.onBackspaceKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  // heaths.vscode-guid
  {
    "key": "shift+cmd+[",
    "command": "-guid.insert",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+cmd+[",
    "command": "-guid.insertMany",
    "when": "editorTextFocus"
  },
  // Tasks
  {
    "key": "cmd+k shift+m",
    "command": "workbench.action.tasks.runTask",
    "args": "Launch Sublime Merge"
  },
  // formulahendry.code-runner
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "cmd+alt+enter",
    "command": "code-runner.run",
    "when": "isMac"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "code-runner.run",
    "when": "isWindows"
  },
  // Open Settings to the side
  {
    "key": "ctrl+,",
    "command": "workbench.action.openSettings",
    "when": "isWindows",
    "args": { "openToSide": true }
  },
  {
    "key": "cmd+,",
    "command": "workbench.action.openSettings",
    "when": "isMac",
    "args": { "openToSide": true }
  },
  // Open Workspace Settings
  {
    "key": "shift+ctrl+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "isWindows"
  },
  {
    "key": "shift+ctrl+,",
    "command": "workbench.action.openWorkspaceSettingsFile",
    "when": "isWindows",
    "args": { "openToSide": true }
  },
  {
    "key": "shift+cmd+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "isMac"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openWorkspaceSettingsFile",
    "when": "isMac",
    "args": { "openToSide": true }
  },
  // Restart extension host
  {
    "key": "cmd+k cmd+r",
    "command": "-workbench.action.keybindingsReference",
    "when": "isMac"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference",
    "when": "isWindows"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "workbench.action.restartExtensionHost",
    "when": "isMac"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "workbench.action.restartExtensionHost",
    "when": "isWindows"
  },
]
